name: Transcribe

on:
  workflow_dispatch:
  # schedule:
  #   - cron: '0 */6 * * *'

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}

permissions:
  contents: write

jobs:
  seed:
    name: Seed
    runs-on: ubuntu-latest
    timeout-minutes: 360
    steps:
      - timeout-minutes: 5
        name: Checkout
        uses: actions/checkout@v4

      - name: Configure git
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "actions@github.com"
          git config pull.rebase false

      - name: Pull
        run: git pull origin $GITHUB_REF

      - name: Install uv
        uses: astral-sh/setup-uv@v6
        with:
          version: "latest"
          enable-cache: true
          cache-dependency-glob: '**/pyproject.toml'

      - name: Install Python dependencies
        run: uv sync

      - name: List up to 256 untranscribed files
        run: uv run python -m pipeline.untranscribed -l 256 > files.json

      - id: set-output
        name: Output file list
        run: echo "file-list=$(cat files.json | jq -c)" >> $GITHUB_OUTPUT
        shell: bash
    outputs:
      file-list: ${{ steps.set-output.outputs.file-list }}

  task:
    name: Run pipeline
    runs-on: ubuntu-latest
    timeout-minutes: 360
    needs: seed
    strategy:
      fail-fast: false
      matrix:
        file: ${{ fromJson(needs.seed.outputs.file-list) }}
    steps:
      - timeout-minutes: 5
        name: Checkout
        uses: actions/checkout@v4

      - name: Configure git
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "actions@github.com"
          git config pull.rebase false

      - name: Pull
        run: git pull origin $GITHUB_REF

      - timeout-minutes: 5
        name: Install ffmpeg
        run: sudo apt-get install ffmpeg

      - name: Install uv
        uses: astral-sh/setup-uv@v6
        with:
          version: "latest"
          enable-cache: true
          cache-dependency-glob: '**/pyproject.toml'

      - name: Install Python dependencies
        run: uv sync

      - name: Transcribe
        run: uv run python -m pipeline.transcribe -m turbo -f ${{ matrix.file }}

      - name: Status
        run: git status

      - name: Pull
        run: git pull origin $GITHUB_REF

      - name: Add
        run: |
          git add ./data/output

      - name: Commit
        run: git commit -m "Transcribed ${{ matrix.file }}" --author="palewire <palewire@users.noreply.github.com>" || true

      - name: Pull again
        run: git pull origin $GITHUB_REF

      - name: Push
        run: git push || true
